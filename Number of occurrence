class Solution {
    static int firstOcc(int []arr,int l,int r,int key){
        int ans=-1;
        while(l<=r){
            int mid=(r-l)/2+l;
            if(key==arr[mid]){
                ans=mid;
                r=mid-1;
            }
            else if(key>arr[mid]) l=mid+1;
            else r=mid-1;
        }
        return ans;
    }
    static int lastOcc(int []arr,int l,int r,int key){
        int ans=-1;
        while(l<=r){
            int mid=(r-l)/2+l;
            if(key==arr[mid]){
                ans=mid;
                l=mid+1;
            }
            else if(key>arr[mid]) l=mid+1;
            else r=mid-1;
        }
        return ans;
    }
    int count(int[] arr, int n, int x) {
        // code here
        int first_occ=firstOcc(arr,0,n-1,x);
        int last_occ=lastOcc(arr,0,n-1,x);
        if(first_occ==-1 && last_occ==-1) return 0;
        return last_occ-first_occ+1;
    }
}
